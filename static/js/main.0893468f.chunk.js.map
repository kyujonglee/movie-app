{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Container","styled","div","_templateObject","Poster","img","_templateObject2","Title","span","_templateObject3","Genres","_templateObject4","Columns","_templateObject5","Synopsis","_templateObject6","MoviePoster","_ref2","poster","alt","react_default","a","createElement","src","title","MovieGenre","_ref3","genre","Movie","_ref","genres","synopsis","map","index","key","lib_default","text","maxLine","ellipsis","trimRight","basedOn","GlobalStyle","createGlobalStyle","App_templateObject","reset","MovieApp","App_templateObject2","Loading","App_templateObject3","App","state","_renderMovies","_this","movies","movie","src_Movie","title_english","medium_cover_image","id","_getMovies","_callee","regenerator_default","wrap","_context","prev","next","_callApi","sent","setState","stop","axios","get","then","json","data","catch","err","console","log","this","Fragment","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"u8CAKA,IAAMA,EAAYC,UAAOC,IAAVC,KASTC,EAASH,UAAOI,IAAVC,KAUNC,EAAQN,UAAOO,KAAVC,KASLC,EAAST,UAAOO,KAAVG,KAUNC,EAAUX,UAAOC,IAAVW,KAQPC,EAAWb,UAAOO,KAAVO,KAmCd,SAASC,EAATC,GAAsC,IAAfC,EAAeD,EAAfC,OAAQC,EAAOF,EAAPE,IAC7B,OAAOC,EAAAC,EAAAC,cAAClB,EAAD,CAAQmB,IAAKL,EAAQC,IAAKA,EAAKK,MAAOL,IAG/C,SAASM,EAATC,GAA+B,IAATC,EAASD,EAATC,MACpB,OAAOP,EAAAC,EAAAC,cAAA,YAAOK,GAsCDC,MA1Ef,SAAAC,GAAoD,IAAnCL,EAAmCK,EAAnCL,MAAON,EAA4BW,EAA5BX,OAAQY,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,SACtC,OACEX,EAAAC,EAAAC,cAACtB,EAAD,KACEoB,EAAAC,EAAAC,cAACV,EAAD,KACEQ,EAAAC,EAAAC,cAACN,EAAD,CAAaE,OAAQA,EAAQC,IAAKK,KAEpCJ,EAAAC,EAAAC,cAACV,EAAD,KACEQ,EAAAC,EAAAC,cAACf,EAAD,KAAQiB,GACRJ,EAAAC,EAAAC,cAACZ,EAAD,KACGoB,EAAOE,IAAI,SAACL,EAAOM,GAAR,OACVb,EAAAC,EAAAC,cAACG,EAAD,CAAYE,MAAOA,EAAOO,IAAKD,OAGnCb,EAAAC,EAAAC,cAACR,EAAD,KACEM,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CACEe,KAAML,EACNM,QAAQ,IACRC,SAAS,OACTC,WAAS,EACTC,QAAQ,0rBC/DpB,IAAMC,EAAcC,4BAAHC,IACbC,KAUEC,EAAW5C,UAAOC,IAAV4C,KAWRC,EAAU9C,UAAOC,IAAV8C,KA0DEC,6MA/CbC,MAAQ,KAMRC,cAAgB,WAUd,OATeC,EAAKF,MAAMG,OAAOrB,IAAI,SAAAsB,GAAK,OACxClC,EAAAC,EAAAC,cAACiC,EAAD,CACE/B,MAAO8B,EAAME,cACbtC,OAAQoC,EAAMG,mBACd3B,OAAQwB,EAAMxB,OACdC,SAAUuB,EAAMvB,SAChBG,IAAKoB,EAAMI,UAMjBC,gCAAa,SAAAC,IAAA,IAAAP,EAAA,OAAAQ,EAAAxC,EAAAyC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUb,EAAKc,WADf,OACLb,EADKU,EAAAI,KAEXf,EAAKgB,SAAS,CACZf,WAHS,wBAAAU,EAAAM,SAAAT,QAObM,SAAW,WACT,OAAOI,IACJC,IAAI,6DACJC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKA,KAAKrB,SAC5BsB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,yFA3B5BG,KAAKpB,8CA+BL,OACEvC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,KACKD,KAAK7B,MAAMG,OACVjC,EAAAC,EAAAC,cAACuB,EAAD,KAAWkC,KAAK5B,iBAEhB/B,EAAAC,EAAAC,cAACyB,EAAD,kBAEJ3B,EAAAC,EAAAC,cAACmB,EAAD,cA3CUwC,aCtClBC,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0893468f.chunk.js","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\n\nconst Container = styled.div`\n  width: 600px;\n  display: grid;\n  grid-template-columns: 3.5fr 6.5fr;\n  background-color: white;\n  position: relative;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n`;\n\nconst Poster = styled.img`\n  position: absolute;\n  top: -20px;\n  left: 20px;\n  display: block;\n  width: 180px;\n  height: 240px;\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n`;\n\nconst Title = styled.span`\n  display: inline-block;\n  color: #2d3436;\n  font-size: 32px;\n  margin-top: 10px;\n  padding: 5px 0px;\n  font-weight: 600;\n`;\n\nconst Genres = styled.span`\n  display: flex;\n  color: #b2bec3;\n  font-size: 16px;\n  & > span:not(:last-child) {\n    display: inline-block;\n    margin-right: 5px;\n  }\n`;\n\nconst Columns = styled.div`\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  & > span {\n    padding: 10px 0px;\n  }\n`;\nconst Synopsis = styled.span`\n  color: #b2bec3;\n`;\n\nfunction Movie({ title, poster, genres, synopsis }) {\n  return (\n    <Container>\n      <Columns>\n        <MoviePoster poster={poster} alt={title} />\n      </Columns>\n      <Columns>\n        <Title>{title}</Title>\n        <Genres>\n          {genres.map((genre, index) => (\n            <MovieGenre genre={genre} key={index} />\n          ))}\n        </Genres>\n        <Synopsis>\n          <LinesEllipsis\n            text={synopsis}\n            maxLine=\"3\"\n            ellipsis=\" ...\"\n            trimRight\n            basedOn=\"letters\"\n          />\n        </Synopsis>\n      </Columns>\n    </Container>\n  );\n}\n\n// functional component\n// stateless component\n// state가 필요없고 props만 존재할 때 이를 stateless component 라 함.\n// function render 존재 x , 라이프 사이클 존재 x\nfunction MoviePoster({ poster, alt }) {\n  return <Poster src={poster} alt={alt} title={alt} />;\n}\n\nfunction MovieGenre({ genre }) {\n  return <span>{genre}</span>;\n}\n\nMovie.propTypes = {\n  title: propTypes.string.isRequired,\n  poster: propTypes.string.isRequired,\n  genres: propTypes.array.isRequired,\n  synopsis: propTypes.string.isRequired\n};\n\nMoviePoster.propTypes = {\n  poster: propTypes.string.isRequired,\n  alt: propTypes.string.isRequired\n};\n\n// function Movie({ title, poster, genres, synopsis }) {\n//   return (\n//     <div className=\"Movie\">\n//       <div className=\"Movies__Columns\">\n//         <MoviePoster poster={poster} alt={title}/>\n//       </div>\n//       <div className=\"Movies__Columns\">\n//         <h1>{title}</h1>\n//         <div className=\"Movies__Genres\">\n//           {genres.map((genre, index) => (\n//             <MovieGenre genre={genre} key={index} />\n//           ))}\n//         </div>\n//         <p className=\"Movie__Synopsis\">{synopsis}</p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function MoviePoster({ poster,alt }) {\n//   return <img src={poster} alt={alt} title={alt} className=\"Movie__Poster\" />;\n// }\n\nexport default Movie;\n","import React, { Component } from \"react\";\nimport Movie from \"./Movie\";\nimport axios from \"axios\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\n// 추가해야 할 것!\n// 1. css 적용(Style Component 인강을 들은 후!)\n// 2. 무한스크롤 적용\n// 3. fetch 대신해서 Axios 적용 (Ok)\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n  a{\n    text-decoration: none;\n    color:inherit;\n  };\n  *{\n    box-sizing:border-box;\n  };\n`;\n\nconst MovieApp = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  background-color: #dcdde1;\n  padding: 100px 180px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-auto-rows: 250px;\n  grid-gap: 50px;\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  width: 100%;\n  height: 100vh;\n`;\n\nclass App extends Component {\n  // Render : componentWillMount() => render() -> componentDidMount()\n  state = {};\n\n  componentDidMount() {\n    this._getMovies();\n  }\n\n  _renderMovies = () => {\n    const movies = this.state.movies.map(movie => (\n      <Movie\n        title={movie.title_english}\n        poster={movie.medium_cover_image}\n        genres={movie.genres}\n        synopsis={movie.synopsis}\n        key={movie.id}\n      />\n    ));\n    return movies;\n  };\n\n  _getMovies = async () => {\n    const movies = await this._callApi();\n    this.setState({\n      movies\n    });\n  };\n\n  _callApi = () => {\n    return axios\n      .get(\"https://yts.lt/api/v2/list_movies.json?sort_by=like_count\")\n      .then(json => json.data.data.movies)\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <>\n          {this.state.movies ? (\n            <MovieApp>{this._renderMovies()}</MovieApp>\n          ) : (\n            <Loading> Loading </Loading>\n          )}\n        <GlobalStyle />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}